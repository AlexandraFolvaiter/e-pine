@page "/merchants/{Id}"
@using ePine.Business.Contracts
@using Square.Models
@using Merchant = ePine.Models.Merchant
@inject ICatalogService CatalogService

<PageTitle>Merchant details</PageTitle>

@if (Merchant == null)
{
    <h2>Loading...</h2>
}
else
{
    <h1>@Merchant.Name</h1>


    <div class="container">
        <div class="row">
            <div class="col col-6 accordion">
                
                <h3>
                    Services
                </h3>
                @foreach (var catalogItem in CatalogItems)
                {
                    <div class="accordion-item">
                        <h2 class="accordion-header" id="item-@catalogItem.Id">
                            <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#@catalogItem.Id" aria-expanded="false" aria-controls="@catalogItem.Id">
                                @catalogItem.ItemData.Name
                            </button>
                        </h2>
                        <div id="@catalogItem.Id" class="accordion-collapse collapse">
                            <div class="accordion-body">
                                <p>
                                    @catalogItem.ItemData.Description
                                </p>

                                @foreach (var variant in catalogItem.ItemData.Variations)
                                {
                                    <div>
                                        @string.Format("{1} - Duration: {2} - Price: {3}",
                                            variant.ItemVariationData.Name,
                                            FormatTime(variant.ItemVariationData.ServiceDuration),
                                            FormatPrice(variant.ItemVariationData)) 
                                    </div>
                                }
                            </div>
                        </div >
                    </div>
                }
            </div>
            <div class="col col-6"><h3>Meet the team</h3></div>
        </div>
    </div> 
// team members

// create an appointment button 
}

@code {

    [Parameter]
    public string Id { get; set; }

    public Merchant Merchant { get; set; }

    public IList<CatalogObject> CatalogItems;

    protected override void OnInitialized()
    {
        Merchant = new Merchant
        {
            Id = Guid.NewGuid(),
            Name = "BarberShop",
            Description = "Lorem Ipsum is simply dummy text of the printing and typesetting industry."
        };

        CatalogItems = CatalogService.GetCatalogItems(Guid.Parse(Id));
    }

    public string FormatTime(long? seconds)
    {
        var timeSpan = TimeSpan.Parse(seconds.ToString() ?? "0");
        return $"{timeSpan.Hours:D2}h:{timeSpan.Minutes:D2}m";
    }

    public string FormatPrice(CatalogItemVariation variation)
    {
        return variation.PricingType == "VARIABLE_PRICING" 
            ? "Price variable" 
            : $"{variation.PriceMoney.Amount} {variation.PriceMoney.Currency}";
    }

}